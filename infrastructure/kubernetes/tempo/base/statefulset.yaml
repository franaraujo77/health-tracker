apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tempo
  namespace: observability
  labels:
    app: tempo
    component: distributed-tracing
spec:
  serviceName: tempo-headless
  replicas: 1
  selector:
    matchLabels:
      app: tempo
  template:
    metadata:
      labels:
        app: tempo
        component: distributed-tracing
        version: 2.3.1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3200"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: tempo
      securityContext:
        runAsNonRoot: false  # Tempo base image runs as root
        fsGroup: 0

      containers:
      - name: tempo
        image: health-tracker/tempo:2.3.1
        imagePullPolicy: IfNotPresent

        args:
        - -config.file=/etc/tempo/tempo.yaml
        - -target=all

        ports:
        - name: http
          containerPort: 3200
          protocol: TCP
        - name: otlp-grpc
          containerPort: 4317
          protocol: TCP
        - name: otlp-http
          containerPort: 4318
          protocol: TCP
        - name: grpc
          containerPort: 9095
          protocol: TCP
        - name: memberlist
          containerPort: 7946
          protocol: TCP
        - name: jaeger-http
          containerPort: 14268
          protocol: TCP

        env:
        - name: AWS_REGION
          value: "us-east-1"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: tempo-s3-credentials
              key: access-key-id
              optional: true
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: tempo-s3-credentials
              key: secret-access-key
              optional: true

        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2"
            memory: "4Gi"

        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 45
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        volumeMounts:
        - name: config
          mountPath: /etc/tempo
          readOnly: true
        - name: data
          mountPath: /var/tempo/data
        - name: wal
          mountPath: /var/tempo/wal

      terminationGracePeriodSeconds: 60

      volumes:
      - name: config
        configMap:
          name: tempo-config

  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
      storageClassName: standard

  - metadata:
      name: wal
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
      storageClassName: standard

  updateStrategy:
    type: RollingUpdate
