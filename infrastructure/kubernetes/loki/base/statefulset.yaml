apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki
  namespace: observability
  labels:
    app: loki
    component: log-aggregation
    part-of: observability-stack
spec:
  serviceName: loki-headless
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
        component: log-aggregation
        version: 2.9.4
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3100"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: loki
      securityContext:
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
        runAsNonRoot: true

      containers:
      - name: loki
        image: health-tracker/loki:2.9.4
        imagePullPolicy: IfNotPresent

        args:
        - -config.file=/etc/loki/config/loki-config.yaml
        - -target=all

        ports:
        - name: http
          containerPort: 3100
          protocol: TCP
        - name: grpc
          containerPort: 9095
          protocol: TCP
        - name: memberlist
          containerPort: 7946
          protocol: TCP

        env:
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: loki-config
              key: aws.region
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: loki-s3-credentials
              key: access-key-id
              optional: true
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: loki-s3-credentials
              key: secret-access-key
              optional: true

        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
          limits:
            cpu: "2"
            memory: "4Gi"

        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 45
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3

        volumeMounts:
        - name: config
          mountPath: /etc/loki/config
          readOnly: true
        - name: data
          mountPath: /loki/data
        - name: wal
          mountPath: /loki/wal
        - name: cache
          mountPath: /loki/cache

      terminationGracePeriodSeconds: 60

      volumes:
      - name: config
        configMap:
          name: loki-config
      - name: cache
        emptyDir: {}

  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: loki
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 50Gi
      storageClassName: standard

  - metadata:
      name: wal
      labels:
        app: loki
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 50Gi
      storageClassName: standard

  updateStrategy:
    type: RollingUpdate
