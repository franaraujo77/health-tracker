# Bearer token authentication secret
# Generate token with: openssl rand -hex 32
# Apply with: kubectl apply -f auth-secret.yaml
#
# IMPORTANT: This is a template. Generate actual token before applying.
# In production, use external secret management (Vault, AWS Secrets Manager, etc.)

apiVersion: v1
kind: Secret
metadata:
  name: otel-collector-auth
  namespace: observability
  labels:
    app: otel-collector
    component: telemetry
type: Opaque
stringData:
  # Replace with actual generated token
  bearer-token: "REPLACE_WITH_GENERATED_TOKEN"
---
# Script to generate and apply token
# Save as: generate-and-apply-token.sh
#
# #!/bin/bash
# TOKEN=$(openssl rand -hex 32)
# kubectl create secret generic otel-collector-auth \
#   --from-literal=bearer-token=${TOKEN} \
#   -n observability \
#   --dry-run=client -o yaml | kubectl apply -f -
# echo "Token generated and applied: ${TOKEN}"
# echo "Save this token securely for client configuration"
