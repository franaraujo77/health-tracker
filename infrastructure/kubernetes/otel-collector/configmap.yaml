apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  namespace: observability
  labels:
    app: otel-collector
    component: telemetry
data:
  config.yaml: |
    # OpenTelemetry Collector Configuration
    # Health Tracker CI/CD Pipeline Observability

    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
            max_recv_msg_size_mib: 4
            # TLS configuration
            tls:
              cert_file: /etc/otel/tls/tls.crt
              key_file: /etc/otel/tls/tls.key
              client_ca_file: /etc/otel/tls/ca.crt
              # Require client certificates (mTLS)
              # Set to NoClientCert for bearer token only
              client_ca_file_reload: true
            # Authentication
            auth:
              authenticator: bearertokenauth
            keepalive:
              server_parameters:
                max_connection_idle: 11s
                max_connection_age: 12s
                max_connection_age_grace: 13s
                time: 30s
                timeout: 5s
          http:
            endpoint: 0.0.0.0:4318
            # TLS configuration
            tls:
              cert_file: /etc/otel/tls/tls.crt
              key_file: /etc/otel/tls/tls.key
              client_ca_file: /etc/otel/tls/ca.crt
              client_ca_file_reload: true
            # Authentication
            auth:
              authenticator: bearertokenauth
            cors:
              allowed_origins:
                - "http://localhost:*"
                - "https://*.github.com"

      prometheus:
        config:
          scrape_configs:
            - job_name: 'otel-collector'
              scrape_interval: 30s
              static_configs:
                - targets: ['localhost:8888']

    processors:
      batch:
        timeout: 10s
        send_batch_size: 1024
        send_batch_max_size: 2048

      memory_limiter:
        check_interval: 1s
        limit_mib: 1024
        spike_limit_mib: 750

      resourcedetection:
        detectors: [env, system, docker]
        timeout: 5s
        override: false

      attributes:
        actions:
          - key: service.environment
            value: production
            action: upsert
          - key: pipeline.name
            value: health-tracker-ci
            action: insert

    exporters:
      logging:
        loglevel: info
        sampling_initial: 5
        sampling_thereafter: 200

      prometheus:
        endpoint: "0.0.0.0:8889"
        namespace: otel
        const_labels:
          collector: health-tracker

      otlp/metrics:
        endpoint: prometheus.observability.svc.cluster.local:9090
        tls:
          insecure: true
        sending_queue:
          enabled: true
          num_consumers: 10
          queue_size: 1000
        retry_on_failure:
          enabled: true
          initial_interval: 5s
          max_interval: 30s
          max_elapsed_time: 300s

      otlp/traces:
        endpoint: tempo.observability.svc.cluster.local:4317
        tls:
          insecure: true
        sending_queue:
          enabled: true
          num_consumers: 10
          queue_size: 1000
        retry_on_failure:
          enabled: true
          initial_interval: 5s
          max_interval: 30s
          max_elapsed_time: 300s

      otlp/logs:
        endpoint: loki.observability.svc.cluster.local:3100
        tls:
          insecure: true
        sending_queue:
          enabled: true
          num_consumers: 10
          queue_size: 1000
        retry_on_failure:
          enabled: true
          initial_interval: 5s
          max_interval: 30s
          max_elapsed_time: 300s

    extensions:
      # Bearer token authentication
      bearertokenauth:
        scheme: "Bearer"
        bearer_token_file: /etc/otel/auth/bearer-token

      health_check:
        endpoint: 0.0.0.0:13133
        path: /health/status
        check_collector_pipeline:
          enabled: true
          interval: 5m
          exporter_failure_threshold: 5

      zpages:
        endpoint: 0.0.0.0:55679

      pprof:
        endpoint: 0.0.0.0:1777

    service:
      extensions: [bearertokenauth, health_check, zpages, pprof]

      telemetry:
        logs:
          level: info
        metrics:
          level: detailed
          address: 0.0.0.0:8888

      pipelines:
        metrics:
          receivers: [otlp, prometheus]
          processors: [memory_limiter, resourcedetection, attributes, batch]
          exporters: [logging, prometheus, otlp/metrics]

        traces:
          receivers: [otlp]
          processors: [memory_limiter, resourcedetection, attributes, batch]
          exporters: [logging, otlp/traces]

        logs:
          receivers: [otlp]
          processors: [memory_limiter, resourcedetection, attributes, batch]
          exporters: [logging, otlp/logs]
