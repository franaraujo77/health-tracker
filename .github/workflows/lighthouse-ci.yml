name: Lighthouse CI

on:
  pull_request:
    branches: [main]
    paths:
      - 'frontend/**'
      - '.github/workflows/lighthouse-ci.yml'

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.14.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Lighthouse results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results
          path: frontend/.lighthouseci
          retention-days: 30

      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Read Lighthouse results
            const resultsPath = path.join(process.cwd(), 'frontend', '.lighthouseci');

            let comment = '## ðŸ”¦ Lighthouse CI Results\n\n';
            comment += 'Performance audits completed! Check the artifacts for detailed reports.\n\n';
            comment += '### Core Web Vitals Thresholds\n';
            comment += '- âœ… Performance Score: â‰¥90\n';
            comment += '- âœ… LCP (Largest Contentful Paint): <2.5s\n';
            comment += '- âœ… CLS (Cumulative Layout Shift): <0.1\n';
            comment += '- âœ… TBT (Total Blocking Time): <200ms\n\n';
            comment += '[View detailed Lighthouse reports in artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\n';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
